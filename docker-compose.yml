version: '3.9'

services:
  db:
    image: postgres:15
    container_name: postgres_service
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MAX_CONNECTIONS: 200
      # Set shared_buffers to 25% of system memory
      POSTGRES_MAX_PARALLEL_WORKERS_PER_GATHER: 2
      POSTGRES_MAX_WORKER_PROCESSES: 4
      POSTGRES_MAX_PARALLEL_WORKERS: 4

    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: word_service
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
    working_dir: /app/backend
    volumes:
      - .:/app
    command: >
      sh -c "uvicorn main:app --host 0.0.0.0 --port 8000 --workers 2"

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: frontend_service
    ports:
      - "3000:3000"
    working_dir: /app
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./similar-words-app:/app
    entrypoint: [ "sh", "-c", "sleep 45 && yarn start" ]


volumes:
  postgres-data:
